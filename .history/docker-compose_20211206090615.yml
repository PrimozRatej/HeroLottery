version: "3.7"

services:
  mysqldb:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_ADMIN_PASSWORD}
      MYSQL_USER: ${MYSQL_ADMIN_USERNAME}
    ports:
      - $MYSQL_PORT:$MYSQL_PORT
    volumes:
      - ./db:/docker-entrypoint-initdb.d

  scraper:
    restart: unless-stopped
    container_name: scraper
    build:
      context: .
      dockerfile: ./scraper/Dockerfile
    image: scraper
    env_file:
      - ./.env
    ports:
      - $NODE_SCRAPER_PORT:$NODE_SCRAPER_PORT
    volumes:
      - ./scraper:/scraper
      - /scraper/node_modules
    depends_on:
      - mysqldb
    stdin_open: true
    tty: true

  server:
    restart: unless-stopped
    container_name: server
    build:
      context: .
      dockerfile: ./server/Dockerfile
    image: server
    env_file:
      - ./.env
    ports:
      - $NODE_SERVER_PORT:$NODE_SERVER_PORT
    volumes:
      - ./server:/server
      - /server/node_modules
    depends_on:
      - mysqldb
    stdin_open: true
    tty: true

  client:
    image: nginx:latest
    container_name: client
    environment:
      NGINX_CONF: |-
        upstream server {
          server server:3001 fail_timeout=1s;
        }
        http  {
          map $http_upgrade $connection_upgrade {  
            default upgrade;
            ''      close;
          }
        }
        server {
          listen 80;
          access_log /var/log/nginx/access.log main;

          location /static {
            sendfile on;
            tcp_nopush on;
            gzip on;
            gzip_types text/plain text/css text/xml application/xml text/javascript application/javascript application/x-javascript image/x-icon;
            expires 1d;
            alias /var/local/scratch/static;
            add_header 'Access-Control-Allow-Origin' "*" always;
          }
          location / {
            proxy_pass http://web;
            proxy_set_header Host $$host;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $$remote_addr;
            gzip on;
            gzip_types text/plain text/css text/xml application/xml text/javascript application/javascript application/x-javascript image/x-icon;
            expires 1h;
          }
          location /socket.io {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://api/socket.io/;
          }
        }
    command: /bin/sh -c 'echo "$$NGINX_CONF" > /etc/nginx/conf.d/default.conf && exec nginx -g "daemon off;"'
    restart: "always"
    depends_on:
      - web
    volumes:
      - static:/var/local/scratch/static:ro
      - ./web:/web
    ports:
      - 8000:80

volumes:
  db-config: null
  db-data: